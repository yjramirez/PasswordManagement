@using PasswordManagement.Client.Data
@using System.ComponentModel.DataAnnotations

@inject IJSRuntime JSRuntime

<div class="modal" tabindex="-1" role="dialog" style="display:block">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Password</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="OnCancel">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <EditForm Model="PasswordCard" OnValidSubmit="OnSave" class="modal-body">
                <DataAnnotationsValidator />
                <div class="form-group">
                    <label for="name">Name:</label>
                    <InputText id="name" class="form-control" @bind-Value="PasswordCard.Name" />
                    <ValidationMessage For="@(() => PasswordCard.Name)" />
                </div>
                <div class="form-group">
                    <label for="url">Url:</label>
                    <InputText id="url" class="form-control" @bind-Value="PasswordCard.Url" />
                    <ValidationMessage For="@(() => PasswordCard.Url)" />
                </div>
                <div class="form-group">
                    <label for="userName">User Name:</label>
                    <InputText id="userName" class="form-control" @bind-Value="PasswordCard.UserName" />
                    <ValidationMessage For="@(() => PasswordCard.UserName)" />
                </div>
                <div class="form-group">
                    <label for="password">Password:</label>
                    <div class="input-group">
                        <InputText id="password" class="form-control" aria-describedby="button-addon2" @bind-Value="PasswordCard.Password" />
                        <div class="input-group-append">
                            <button class="btn btn-outline-secondary" type="button" id="button-addon2" @onclick="@(() => CopyTextToClipboard(PasswordCard.Password))">Copy</button>
                        </div>
                    </div>
                    <ValidationMessage For="@(() => PasswordCard.Password)" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary mr-auto" data-dismiss="modal" @onclick="OnCancel">Cancel</button>
                    <button type="submit" class="btn btn-primary ml-auto" disabled="@(!context.Validate())">Save</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code { 
    [Parameter] public PasswordCard PasswordCard { get; set; }
    [Parameter] public EventCallback OnCancel { get; set; }
    [Parameter] public EventCallback OnSave { get; set; }


    async Task CopyTextToClipboard(string password)
    {
        await JSRuntime.InvokeVoidAsync("clipboardCopy.copyText", password);
    }
}

